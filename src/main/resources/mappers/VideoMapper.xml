<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.lcyjtz.mapper.VideoMapper">
    <resultMap id="BaseResultMap" type="com.example.lcyjtz.entity.Video">
        <id column="Video_ID" property="videoId" jdbcType="INTEGER"/>
        <result column="Video_FileName" property="videoFilename" jdbcType="VARCHAR"/>
        <result column="Video_Path" property="videoPath" jdbcType="VARCHAR"/>
        <result column="Video_Data" property="videoData" jdbcType="VARCHAR"/>
        <result column="Video_Title" property="videoTitle" jdbcType="VARCHAR"/>
        <collection property="vcomment" ofType="com.example.lcyjtz.entity.Vcomment">
            <id column="VComment_ID" property="vcommentId" jdbcType="INTEGER"/>
            <result column="VComment_VideoID" property="vcommentVideoid" jdbcType="INTEGER"/>
            <result column="VComment_Content" property="vcommentContent" jdbcType="VARCHAR"/>
            <result column="VComment_UserName" property="vcommentUsername" jdbcType="VARCHAR"/>
            <result column="VComment_Data" property="vcommentData" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    Video_ID, Video_FileName, Video_Path, Video_Data, Video_Title
    </sql>
    <sql id="Base_Column_List2">
        Video_ID, Video_FileName, Video_Path, Video_Data, Video_Title, VComment_ID, VComment_Content, VComment_UserName, VComment_Data
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.lcyjtz.entity.VideoExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from video
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List2"></include>
        from video right join vcomment
        on Video_ID = #{videoId,jdbcType=INTEGER} AND Video_ID=VComment_VideoID
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from video
    where Video_ID = #{videoId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.lcyjtz.entity.VideoExample">
        delete from video
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.lcyjtz.entity.Video">
    insert into video (Video_ID, Video_FileName, Video_Path, 
      Video_Data, Video_Title)
    values (#{videoId,jdbcType=INTEGER}, #{videoFilename,jdbcType=VARCHAR}, #{videoPath,jdbcType=VARCHAR}, 
      #{videoData,jdbcType=VARCHAR}, #{videoTitle,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.example.lcyjtz.entity.Video">
        insert into video
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="videoId != null">
                Video_ID,
            </if>
            <if test="videoFilename != null">
                Video_FileName,
            </if>
            <if test="videoPath != null">
                Video_Path,
            </if>
            <if test="videoData != null">
                Video_Data,
            </if>
            <if test="videoTitle != null">
                Video_Title,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="videoId != null">
                #{videoId,jdbcType=INTEGER},
            </if>
            <if test="videoFilename != null">
                #{videoFilename,jdbcType=VARCHAR},
            </if>
            <if test="videoPath != null">
                #{videoPath,jdbcType=VARCHAR},
            </if>
            <if test="videoData != null">
                #{videoData,jdbcType=VARCHAR},
            </if>
            <if test="videoTitle != null">
                #{videoTitle,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.lcyjtz.entity.VideoExample" resultType="java.lang.Integer">
        select count(*) from video
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update video
        <set>
            <if test="record.videoId != null">
                Video_ID = #{record.videoId,jdbcType=INTEGER},
            </if>
            <if test="record.videoFilename != null">
                Video_FileName = #{record.videoFilename,jdbcType=VARCHAR},
            </if>
            <if test="record.videoPath != null">
                Video_Path = #{record.videoPath,jdbcType=VARCHAR},
            </if>
            <if test="record.videoData != null">
                Video_Data = #{record.videoData,jdbcType=VARCHAR},
            </if>
            <if test="record.videoTitle != null">
                Video_Title = #{record.videoTitle,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update video
        set Video_ID = #{record.videoId,jdbcType=INTEGER},
        Video_FileName = #{record.videoFilename,jdbcType=VARCHAR},
        Video_Path = #{record.videoPath,jdbcType=VARCHAR},
        Video_Data = #{record.videoData,jdbcType=VARCHAR},
        Video_Title = #{record.videoTitle,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.lcyjtz.entity.Video">
        update video
        <set>
            <if test="videoFilename != null">
                Video_FileName = #{videoFilename,jdbcType=VARCHAR},
            </if>
            <if test="videoPath != null">
                Video_Path = #{videoPath,jdbcType=VARCHAR},
            </if>
            <if test="videoData != null">
                Video_Data = #{videoData,jdbcType=VARCHAR},
            </if>
            <if test="videoTitle != null">
                Video_Title = #{videoTitle,jdbcType=VARCHAR},
            </if>
        </set>
        where Video_ID = #{videoId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.lcyjtz.entity.Video">
    update video
    set Video_FileName = #{videoFilename,jdbcType=VARCHAR},
      Video_Path = #{videoPath,jdbcType=VARCHAR},
      Video_Data = #{videoData,jdbcType=VARCHAR},
      Video_Title = #{videoTitle,jdbcType=VARCHAR}
    where Video_ID = #{videoId,jdbcType=INTEGER}
  </update>
</mapper>